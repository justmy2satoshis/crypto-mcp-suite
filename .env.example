# Crypto MCP Suite - Environment Variables Template
# Copy this file to .env.local and fill in your actual API keys
# See API_KEYS_REFERENCE.md for detailed documentation

# ========== PHASE 3 API KEYS ==========

# CryptoPanic API - News aggregation (cryptopanic-mcp-server)
# Get your key: https://cryptopanic.com/developers/api/
CRYPTOPANIC_API_KEY=your_cryptopanic_key_here

# Infura API - Ethereum RPC (uniswap-price-mcp, uniswap-trader-mcp)
# Get your key: https://infura.io/register
# Free tier: 100,000 requests/day
INFURA_API_KEY=your_infura_key_here
INFURA_PROJECT_ID=your_infura_key_here
INFURA_KEY=your_infura_key_here
INFURA_ENDPOINT=https://mainnet.infura.io/v3/your_infura_key_here

# TheGraph API - Blockchain indexing (aave-mcp, uniswap-pools-mcp)
# Get your key: https://thegraph.com/studio/
THEGRAPH_API_KEY=your_thegraph_key_here

# Dune Analytics API - Analytics queries (wallet-inspector-mcp)
# Get your key: https://dune.com/settings/api
DUNE_API_KEY=your_dune_key_here
DUNE_SIM_API_KEY=your_dune_key_here

# Santiment API - Social sentiment (crypto-sentiment-mcp)
# Get your key: https://app.santiment.net/account
SANTIMENT_API_KEY=your_santiment_key_here

# Solana RPC - Solana blockchain (jupiter-mcp)
# Public endpoint (free, rate limited)
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com

# ========== PHASE 4 API KEYS ==========

# SolSniffer API - Rug detection (rug-check-mcp)
# Get your key: https://solsniffer.com/
SOLSNIFFER_API_KEY=your_solsniffer_key_here

# ========== PHASE 6 API KEYS ==========

# CoinGlass API - Derivatives data (hyperliquid-whalealert-mcp)
# Get your key: https://www.coinglass.com/api
COINGLASS_API_KEY=your_coinglass_key_here

# ========== TEST WALLETS (PHASE 6) ==========
# ⚠️  WARNING: Use TEST WALLETS ONLY - never production wallets!
# These wallets should have minimal funds (< $10) for testing purposes only

# Ethereum Test Wallet (uniswap-trader-mcp)
# Format: 64-character hex private key (without 0x prefix)
# Supports: Ethereum, Optimism, Polygon, Arbitrum, Celo, BNB Chain, Avalanche, Base
WALLET_PRIVATE_KEY=your_test_eth_private_key_here

# Solana Test Wallet (jupiter-mcp)
# Format: Base58-encoded private key
PRIVATE_KEY=your_test_sol_private_key_here

# ========== UNUSED API KEYS (Optional) ==========
# Pre-existing keys not currently used by any MCP
# Uncomment and fill in if you want to use these services

# TokenMetrics API - Price predictions
# TOKENMETRICS_API_KEY=your_tokenmetrics_key_here

# GitHub Personal Access Token
# GITHUB_TOKEN=your_github_token_here

# LunarCrush API - Social metrics
# LUNARCRUSH_API_KEY=your_lunarcrush_key_here

# Messari API - Research data
# MESSARI_API_KEY=your_messari_key_here

# CoinMarketCal API - Event calendar
# COINMARKETCAL_API_KEY=your_coinmarketcal_key_here

# CoinGecko API - Market data
# COINGECKO_API_KEY=your_coingecko_key_here

# CoinMarketCap API - Market data
# COINMARKETCAP_API_KEY=your_coinmarketcap_key_here

# CryptoCompare API - Price data
# CRYPTOCOMPARE_API_KEY=your_cryptocompare_key_here

# Nansen API - Blockchain analytics
# NANSEN_API_KEY=your_nansen_key_here

# ========== CONFIGURATION NOTES ==========

# Security Best Practices:
# 1. Never commit this file with real keys to git
# 2. Copy this file to .env.local and fill in your actual keys
# 3. Use test wallets only (< $10 balance) for development
# 4. Rotate API keys periodically (every 3-6 months)
# 5. Monitor API usage dashboards for unauthorized access

# Individual MCP Configuration:
# Each MCP also expects its own .env file in its directory:
# - native/lib/cryptopanic-mcp-server/.env
# - native/lib/uniswap-price-mcp/.env
# - native/lib/aave-mcp/.env
# - native/lib/uniswap-pools-mcp/.env
# - native/lib/crypto-sentiment-mcp/.env
# - native/lib/wallet-inspector-mcp/.env
# - native/lib/rug-check-mcp/.env
# - native/lib/hyperliquid-whalealert-mcp/.env
# - native/lib/uniswap-trader-mcp/.env
# - native/lib/jupiter-mcp/.env

# Production Deployment:
# For production, use a secrets manager like:
# - AWS Secrets Manager
# - HashiCorp Vault
# - Azure Key Vault
# - Google Secret Manager

# For detailed documentation, see API_KEYS_REFERENCE.md
